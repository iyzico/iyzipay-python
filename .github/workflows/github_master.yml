name: Build Release and Upload PyPi Package

on:
  push:
    branches: [ "master" ]

#permissions:
#  contents: read

jobs:
  build_and_publish:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Update Release Number
      run: |
        set -e
          
        # Retrieve the current release number
        current_release=$(cat VERSION)
          
        # If major version required uncomment below row
        # current_release='<major_version_number>'

        # Increment the release number
        new_release=$(echo $current_release | awk -F. -v OFS=. '{$NF++;print}')

        # Set the new release number as an environment variable
        echo "NEW_RELEASE=${new_release}" >> $GITHUB_ENV
          
        # Change version number on files
        sed -i -e 's/'$current_release'/'$new_release'/g' setup.py iyzipay/iyzipay_resource.py VERSION pyproject.toml

    - name: Github Tasks
      run: |
        set -e
        git config user.name "iyzico-ci"
        git config user.email iyzico-ci@iyzico.com
        git add .
        git commit -m "Automatic commit by iyzico-ci v${{env.NEW_RELEASE}}"
        git push origin master
        git tag -a v${{env.NEW_RELEASE}} -m "Automatic tag by iyzico-ci v${{env.NEW_RELEASE}}"
        git push origin v${{env.NEW_RELEASE}}
          
    - name: Github Release
      run: |
        # Use the new release version in release creation step
        echo "Creating release ${{env.NEW_RELEASE}}..."
        result=$( curl -# -XPOST -H "Authorization: token ${{secrets.TOKEN_GITHUB}}" -H "Content-Type: application/json" -H "Accept:application/json" --data-binary '{"tag_name": "v${{env.NEW_RELEASE}}","target_commitish": "master","name": "iyzipay-python ${{env.NEW_RELEASE}}","body": "version ${{env.NEW_RELEASE}}","draft": false,"prerelease": false}' https://api.github.com/repos/iyzico/iyzipay-python/releases )
        echo $result
        echo "GitHub release ${{env.NEW_RELEASE}} created!"
                        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.TOKEN_PYPI }}
